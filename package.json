{
  "name": "zinger",
  "version": "1.0.0",
  "description": "Next generation esl system",
  "private": true,
  "workspaces": [
    "packages/*"
  ],
  "scripts": {
    "aws:build": "yarn workspace @zinger/aws build",
    "aws:cdk": "yarn workspace @zinger/aws cdk",
    "aws:cdk:deploy": "yarn workspace @zinger/aws cdk:deploy",
    "aws:cdk:destroy": "yarn workspace @zinger/aws cdk:destroy",
    "aws:cdk:sandbox": "yarn workspace @zinger/aws cdk:sandbox",
    "aws:cdk:sandbox:deploy": "yarn workspace @zinger/aws cdk:sandbox:deploy",
    "aws:cdk:staging": "yarn workspace @zinger/aws cdk:staging",
    "aws:cdk:staging:deploy": "yarn workspace @zinger/aws cdk:staging:deploy",
    "aws:clean": "yarn workspace @zinger/aws clean",
    "aws:ec2:bastion:start": "yarn workspace @zinger/aws ec2:bastion:start",
    "aws:ec2:bastion:stop": "yarn workspace @zinger/aws ec2:bastion:stop",
    "aws:ec2:key-pair:delete": "yarn workspace @zinger/aws ec2:key-pair:delete",
    "aws:ecr:repository:delete": "yarn workspace @zinger/aws ecr:repository:delete",
    "aws:ecs:create:queue": "yarn workspace @zinger/aws ecs:create:queue",
    "aws:ecs:create:service": "yarn workspace @zinger/aws ecs:create:service",
    "aws:ecs:delete:queue": "yarn workspace @zinger/aws ecs:delete:queue",
    "aws:ecs:delete:service": "yarn workspace @zinger/aws ecs:delete:service",
    "aws:ecs:register": "yarn workspace @zinger/aws ecs:register",
    "aws:ecs:run:batch": "yarn workspace @zinger/aws ecs:run:batch",
    "aws:ecs:run:migration": "yarn workspace @zinger/aws ecs:run:migration",
    "aws:ecs:update:queue": "yarn workspace @zinger/aws ecs:update:queue",
    "aws:ecs:update:service": "yarn workspace @zinger/aws ecs:update:service",
    "aws:events:delete": "yarn workspace @zinger/aws events:delete",
    "aws:events:register:rule": "yarn workspace @zinger/aws events:register:rule",
    "aws:events:register:target": "yarn workspace @zinger/aws events:register:target",
    "aws:get-ecr-host": "yarn workspace @zinger/aws get-ecr-host",
    "aws:iam:user:create": "yarn workspace @zinger/aws iam:user:create",
    "aws:iam:user:delete": "yarn workspace @zinger/aws iam:user:delete",
    "aws:push-docker-images:prod": "yarn workspace @zinger/aws push-docker-images:prod",
    "aws:push-docker-images:sandbox": "yarn workspace @zinger/aws push-docker-images:sandbox",
    "aws:push-docker-images:staging": "yarn workspace @zinger/aws push-docker-images:staging",
    "aws:rds:delete": "yarn workspace @zinger/aws rds:delete",
    "aws:route53:hosted-zone:create": "yarn workspace @zinger/aws route53:hosted-zone:create",
    "aws:route53:hosted-zone:delete": "yarn workspace @zinger/aws route53:hosted-zone:delete",
    "aws:s3:delete": "yarn workspace @zinger/aws s3:delete",
    "aws:ssm:delete:prod": "yarn workspace @zinger/aws ssm:delete:prod",
    "aws:ssm:delete:sandbox": "yarn workspace @zinger/aws ssm:delete:sandbox",
    "aws:ssm:delete:staging": "yarn workspace @zinger/aws ssm:delete:staging",
    "aws:ssm:register:prod": "yarn workspace @zinger/aws ssm:register:prod",
    "aws:ssm:register:sandbox": "yarn workspace @zinger/aws ssm:register:sandbox",
    "aws:ssm:register:staging": "yarn workspace @zinger/aws ssm:register:staging",
    "clean": "run-p *:clean",
    "codecept": "run-s 'codecept:unit {@}' 'codecept:billing {@}' 'codecept:e2e {@}' --",
    "codecept-run": "php vendor/bin/codecept run",
    "codecept-update-snapshots": "php vendor/bin/codecept updateSnapshots",
    "codecept:billing": "cross-env APP_ENV=billing yarn codecept-run Billing",
    "codecept:billing:update-snapshots": "cross-env APP_ENV=billing yarn codecept-update-snapshots Billing",
    "codecept:e2e": "cross-env APP_ENV=e2e yarn codecept-run Api",
    "codecept:e2e:update-snapshots": "cross-env APP_ENV=e2e yarn codecept-update-snapshots Api",
    "codecept:unit": "cross-env APP_ENV=testing yarn codecept-run Unit",
    "codecept:unit:coverage": "cross-env XDEBUG_MODE=coverage yarn codecept:unit --coverage-xml",
    "codecept:unit:parallel": "run-p codecept:unit:parallel:*",
    "codecept:unit:parallel:app": "yarn codecept:unit --report server/tests/Unit/App",
    "codecept:unit:parallel:domain": "yarn codecept:unit --report server/tests/Unit/Domain",
    "codecept:unit:parallel:infrastructure": "yarn codecept:unit --report server/tests/Unit/Infrastructure",
    "codecept:unit:parallel:use-case": "yarn codecept:unit --report server/tests/Unit/UseCase",
    "codecept:unit:update-snapshots": "cross-env APP_ENV=testing yarn codecept-update-snapshots Unit",
    "docker:build:all": "yarn workspace @zinger/docker build:all",
    "docker:build:dev": "yarn workspace @zinger/docker build:dev",
    "docker:build:prod": "run-s docker:build:prod:*",
    "docker:build:prod:setup": "run-s frontend:build",
    "docker:build:prod:run": "yarn workspace @zinger/docker build:prod",
    "docker:build:sandbox": "run-s docker:build:sandbox:*",
    "docker:build:sandbox:setup": "run-s frontend:build",
    "docker:build:sandbox:run": "yarn workspace @zinger/docker build:sandbox",
    "docker:build:staging": "run-s docker:build:staging:*",
    "docker:build:staging:setup": "run-s frontend:build",
    "docker:build:staging:run": "yarn workspace @zinger/docker build:staging",
    "docker:clean": "yarn workspace @zinger/docker clean",
    "dev": "run-p dev:*",
    "dev:docker": "run-s start:docker",
    "dev:nuxt": "cross-env NODE_ENV=development yarn workspace @zinger/frontend start",
    "enums:build": "yarn workspace @zinger/enums build",
    "frontend:build": "yarn workspace @zinger/frontend build",
    "frontend:clean": "yarn workspace @zinger/frontend clean",
    "lint": "eslint . --cache --ext .js,.ts,.vue",
    "lint:ci": "eslint",
    "lint:fix": "yarn lint --fix",
    "o:b": "run-s openapi:build",
    "o:s": "run-s openapi:start",
    "o:w": "run-s openapi:watch",
    "openapi:build": "yarn workspace @zinger/openapi build",
    "openapi:gas:open": "yarn workspace @zinger/openapi gas:open",
    "openapi:gas:pull": "yarn workspace @zinger/openapi gas:pull",
    "openapi:gas:push": "yarn workspace @zinger/openapi gas:push",
    "openapi:start": "yarn workspace @zinger/openapi start",
    "openapi:watch": "yarn workspace @zinger/openapi watch",
    "prepare": "husky install",
    "repl": "ts-node --project tsconfig-repl.json --require tsconfig-paths/register",
    "s": "run-s start",
    "s:d": "run-s start:docker",
    "s:n": "run-s start:nuxt",
    "service-code-api:build": "yarn workspace @zinger/service-code-api build",
    "service-code-api:cdk:prod": "yarn workspace @zinger/service-code-api cdk:prod",
    "service-code-api:cdk:staging": "yarn workspace @zinger/service-code-api cdk:staging",
    "service-code-api:clean": "yarn workspace @zinger/service-code-api clean",
    "service-code-api:deploy:prod": "yarn workspace @zinger/service-code-api deploy:prod",
    "service-code-api:deploy:staging": "yarn workspace @zinger/service-code-api deploy:staging",
    "service-code-api:output:csv:dws": "yarn workspace @zinger/service-code-api output:csv:dws",
    "service-code-api:output:csv:ltcs": "yarn workspace @zinger/service-code-api output:csv:ltcs",
    "service-code-api:setup:db": "yarn workspace @zinger/service-code-api setup:db",
    "start": "run-p start:*",
    "start:docker": "run-s start:docker:*",
    "start:docker:build": "run-s docker:build:dev",
    "start:docker:up": "docker-compose -p zinger up -d",
    "start:nuxt": "cross-env NODE_ENV=local yarn workspace @zinger/frontend start",
    "stop": "run-p stop:*",
    "stop:docker": "docker-compose -p zinger down",
    "t": "run-s test",
    "t:c": "run-s test:coverage",
    "t:u": "run-s test:unit",
    "t:w": "run-s test:watch",
    "test": "jest",
    "test:ci": "run-s test:ci:*",
    "test:ci:aws": "yarn test:unit:aws --ci --runInBand",
    "test:ci:frontend": "yarn test:unit:frontend --ci --runInBand",
    "test:ci:frontend:coverage": "yarn test:coverage:frontend --ci --runInBand",
    "test:ci:service-code-api": "yarn test:unit:service-code-api --ci --runInBand",
    "test:coverage": "run-s test:coverage:*",
    "test:coverage:frontend": "yarn test:unit:frontend --coverage --coverageDirectory packages/frontend/coverage",
    "test:unit": "jest --selectProjects aws frontend service-code-api",
    "test:unit:aws": "jest --selectProjects aws",
    "test:unit:frontend": "jest --selectProjects frontend",
    "test:unit:frontend:list": "jest --listTests --json -c ./packages/frontend/jest.config.ts",
    "test:unit:service-code-api": "jest --selectProjects service-code-api",
    "test:watch": "jest --watch"
  },
  "dependencies": {
    "@babel/core": "^7.17.0",
    "@babel/preset-env": "~7.24.0",
    "@babel/runtime-corejs3": "^7.17.0",
    "@nuxtjs/eslint-config-typescript": "^12.0.0",
    "@types/jest": "29.5.12",
    "@typescript-eslint/eslint-plugin": "^7.0.0",
    "@typescript-eslint/parser": "^7.0.0",
    "@vue/vue2-jest": "^29.0.0",
    "babel-jest": "^29.0.0",
    "cross-env": "^7.0.3",
    "deepmerge": "^4.2.2",
    "eslint": "^8.17.0",
    "eslint-plugin-vue": "^9.1.1",
    "husky": "^9.0.0",
    "jest": "~29.7.0",
    "jest-environment-jsdom": "^29.0.0",
    "jest-google-maps-mock": "^1.0.7",
    "jest-matcher-utils": "^29.0.0",
    "jest-runner-eslint": "~2.2.0",
    "jest-transform-stub": "^2.0.0",
    "jest-validate": "^29.0.0",
    "jest-watch-master": "^1.0.0",
    "jest-watch-select-projects": "^2.0.0",
    "jest-watch-suspend": "^1.1.2",
    "jest-watch-typeahead": "2.2.2",
    "lint-staged": "^15.0.0",
    "node-notifier": "^10.0.1",
    "npm-run-all2": "^5.0.0",
    "ts-jest": "29.1.2",
    "typescript": "~5.4.0",
    "vue": "^3.0.0",
    "vue-template-compiler": "^2.6.14"
  },
  "resolutions": {
    "core-js": "^3.10.1",
    "vuetify": "3.5.12"
  }
}
