/*
 * Copyright © 2019 EUSTYLE LABORATORY - ALL RIGHTS RESERVED.
 * UNAUTHORIZED COPYING OF THIS FILE, VIA ANY MEDIUM IS STRICTLY PROHIBITED PROPRIETARY AND CONFIDENTIAL.
 */
const { promises: fs } = require('fs')
const glob = require('glob')
const path = require('path')

// テスト環境では vuetify-loader による動的ローディングが動作しないためすべてのコンポーネントを手動で登録する

const root = path.resolve(__dirname, '..', '..')
const main = path.resolve(root, 'main')

const findComponents = () => glob
  .sync('components/**/z-*.vue', { cwd: main })
  .map(x => {
    const kebabCase = path.basename(x, path.extname(x))
    return {
      name: kebabCase
        .replace(/^[a-z]/, m => m[0].toUpperCase())
        .replace(/-([a-z])/g, m => m[1].toUpperCase()),
      path: `~/${x}`
    }
  })

const generateComponentIndex = async xs => {
  const data = [
    '// THIS FILE IS AUTO GENERATED BY test/setup/global.ts',
    '// DO NOT EDIT DIRECTLY',
    'import Vue from \'vue\'',
    ...xs.map(x => `import ${x.name} from '${x.path}'`),
    '',
    'export function setupComponents (): void {',
    ...xs.map(x => `  Vue.component('${x.name}', ${x.name})`),
    '}'
  ]
  await fs.writeFile(path.resolve(main, 'components', 'index.ts'), data.join('\n') + '\n')
}

export default async function () {
  const xs = findComponents()
  await generateComponentIndex(xs)
}
