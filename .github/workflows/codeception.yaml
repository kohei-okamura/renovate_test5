name: "Codeception"

on:
  pull_request:
    branches:
      - main
      - staging
      - prod
    paths:
      - '**.php'
      - '**.ttf'
      - 'codeception.yml'
      - 'composer.json'
      - 'composer.lock'
      - '.github/workflows/codeception.yaml'
      - 'server/.env*'
  schedule:
    - cron: '58 0 * * 1-5'
  workflow_dispatch:

concurrency:
  group: codeception-${{ github.head_ref || github.run_id }}-${{ github.base_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  codeception:
    runs-on: ubuntu-20.04
    if: ${{ github.event_name != 'pull_request' || github.base_ref != 'main' || startsWith(github.head_ref, 'renovate/') }}
    services:
      mysql:
        image: mysql:8.0.21
        ports:
          - "43306:3306"
        env:
          MYSQL_USER: zinger
          MYSQL_PASSWORD: secret
          MYSQL_DATABASE: zinger_testing
          MYSQL_ROOT_PASSWORD: secret
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
      maildev:
        image: maildev/maildev:1.1.0
        ports:
          - "80:80"
          - "1025:25"
    strategy:
      fail-fast: false
      matrix:
        command: ['unit', 'e2e', 'billing']
    steps:
      - name: Setup Redis
        uses: getong/redis-action@v1
        with:
          redis version: '6.0.12'
          redis password: 'secret'
      - name: Setup PHP with pecl extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: gd, json, pdo, redis
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get Composer Cache Directory
        id: cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: Restore Cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-
      - name: Install wkhtmltopdf
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends wkhtmltopdf
      - name: Install Dependencies
        run: composer install
      - name: Run Codeception
        run: composer test:${{ matrix.command }}:ci
        env:
          APP_NAME: ZingerUnitTest
          APP_DEBUG: true
          APP_KEY: ohqtKlZbZgfG5iLbIFcdoCCALDjyuW4j
          CACHE_DRIVER: array
          DB_PASSWORD: secret
          DB_TIMEZONE: +09:00
          QUEUE_CONNECTION: sync
          REDIS_PASSWORD: secret
          STAFF_ATTENDANCE_CONFIRMATION_THIRD_AUDIO_URI: ${{ secrets.STAFF_ATTENDANCE_CONFIRMATION_THIRD_AUDIO_URI }}
          ZINGER_FILE_STORAGE: local
          ZINGER_GOOGLE_GEOCODING_API_KEY: ${{ secrets.ZINGER_GOOGLE_GEOCODING_API_KEY }}
          ZINGER_TWILIO_ACCOUNT_SID: ${{ secrets.ZINGER_TWILIO_ACCOUNT_SID }}
          ZINGER_TWILIO_API_KEY_SECRET: ${{ secrets.ZINGER_TWILIO_API_KEY_SECRET }}
          ZINGER_TWILIO_API_KEY_SID: ${{ secrets.ZINGER_TWILIO_API_KEY_SID }}
          ZINGER_TWILIO_FROM_TEL_NUMBER: ${{ secrets.ZINGER_TWILIO_FROM_TEL_NUMBER }}
      - name: Codecov
        if: ${{ matrix.command == 'unit' }}
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./server/tests/_output
          flags: backend-unit-tests
      - name: Slack Notification on Failure
        if: ${{ failure() }}
        uses: ./.github/actions/notify-to-slack
        with:
          color: danger
          text: ${{ 'バックエンドの' }}${{ matrix.command }}${{ ' テストでエラーが検出されました。' }}
          url: ${{ secrets.SLACK_WEBHOOK }}
